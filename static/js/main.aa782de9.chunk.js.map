{"version":3,"sources":["components/pages/About.js","components/pages/NotFound.js","components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["About","className","Header","props","branding","href","to","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","children","Component","Consumer","Contact","showContactInfo","deleteContact","a","delete","name","email","style","cursor","onClick","float","color","bind","marginRight","Contacts","Fragment","key","TextInputGroup","label","error","placeholder","onChange","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updContact","match","params","put","App","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.aa782de9.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, Page not found!</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n//import { render } from \"@testing-library/react\";\n\nconst Header = (props) => {\n  const { branding } = props;\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand text-white\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link text-white\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link text-white\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link text-white\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n  //   return (\n  //     <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n  //       <div className=\"container\">\n  //         <a href=\"/\" className=\"navbar-brand\">\n  //           {branding}\n  //         </a>\n  //         <div>\n  //           <ul className=\"navbar-nav mr-auto\">\n  //             <li className=\"nav-item\">\n  //               <Link to=\"/\" className=\"nav-link\">\n  //                 <i className=\"fas fa-home\" /> Home\n  //               </Link>\n  //             </li>\n  //             <li className=\"nav-item\">\n  //               <Link to=\"/\" className=\"nav-link\">\n  //                 <i className=\"fas fa-plus\" /> Add\n  //               </Link>\n  //             </li>\n  //             <li className=\"nav-item\">\n  //               <Link to=\"/\" className=\"nav-link\">\n  //                 <i className=\"fas fa-question\" /> About\n  //               </Link>\n  //             </li>\n  //           </ul>\n  //         </div>\n  //       </div>\n  //     </nav>\n  //   );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\",\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        ),\n      };\n\n    // case \"dd\":\n    //   return {\n    //     ...state,\n    //     contacts: state.contacts.map(contact=>contact.id===action.payload.id ?(contact=action.payload): contact)\n    //   }\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n  //dispatch\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Contact extends Component {\n  state = {\n    showContactInfo: false,\n  };\n\n  deleteContact = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer \" }}\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo,\n                    })\n                  }\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{\n                    cursor: \"pointer\",\n                    float: \"right\",\n                    color: \"red\",\n                  }}\n                  onClick={this.deleteContact.bind(this, id, dispatch)}\n                  //onClick={dispatch({ type: \"DELETE_CONTACT\", payload: id })}\n                />\n                {\"   \"}\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\",\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nexport default class Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {(value) => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-success\">Contact</span> List\n              </h1>\n              {contacts.map((contact) => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  type,\n  error,\n  placeholder,\n  value,\n  onChange,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error,\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\nTextInputGroup.defaultProps = {\n  type: \"text\",\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport { v4 as uuid } from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n\nexport default class AddContact extends Component {\n  state = {\n    //id: uuid(),\n    name: \"\",\n    email: \"\",\n    errors: {},\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { id, name, email } = this.state;\n\n    //check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    const newContact = { name, email };\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      errors: {},\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card-mb-3\">\n              <div className=\"card-header\">Add New Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <br />\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    value=\"Add Contact\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n//import { v4 as uuid } from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n\nexport default class EditContact extends Component {\n  state = {\n    //id: ,\n    name: \"\",\n    email: \"\",\n    errors: {},\n  };\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n    });\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email } = this.state;\n\n    //check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    const updContact = { name, email };\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      errors: {},\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card-mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <br />\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    value=\"Update Contact\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Header from \"./components/layout/Header\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contacts Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}